/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "S1AP-IEs"
 * 	found in "asn1c/s1ap-r17.3.0/36413-h30.asn"
 * 	`asn1c -D /home/sid/mme/binds/src/s1ap/c -fcompound-names -no-gen-example`
 */

#ifndef	_SensorNameConfig_H_
#define	_SensorNameConfig_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include "ProtocolIE-SingleContainer.h"
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum SensorNameConfig_PR {
	SensorNameConfig_PR_NOTHING,	/* No components present */
	SensorNameConfig_PR_uncompensatedBarometricConfig,
	SensorNameConfig_PR_choice_Extensions
} SensorNameConfig_PR;
typedef enum SensorNameConfig__uncompensatedBarometricConfig {
	SensorNameConfig__uncompensatedBarometricConfig_true	= 0
	/*
	 * Enumeration is extensible
	 */
} e_SensorNameConfig__uncompensatedBarometricConfig;

/* SensorNameConfig */
typedef struct SensorNameConfig {
	SensorNameConfig_PR present;
	union SensorNameConfig_u {
		long	 uncompensatedBarometricConfig;
		ProtocolIE_SingleContainer_8146P0_t	 choice_Extensions;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SensorNameConfig_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_uncompensatedBarometricConfig_2;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_SensorNameConfig;
extern asn_CHOICE_specifics_t asn_SPC_SensorNameConfig_specs_1;
extern asn_TYPE_member_t asn_MBR_SensorNameConfig_1[2];
extern asn_per_constraints_t asn_PER_type_SensorNameConfig_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _SensorNameConfig_H_ */
#include <asn_internal.h>
